// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  nombre    String
  password  String
  rol       RolUsuario @default(OPERADOR)
  activo    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  actasCargadas ActaMesa[]
  
  @@map("usuarios")
}

model Lista {
  id     Int       @id @default(autoincrement())
  nombre String
  tipo   TipoLista
  orden  Int
  activa Boolean   @default(true)
  
  votos VotoLista[]
  
  @@unique([nombre, tipo], name: "nombre_tipo")  //
  @@map("listas")
}

model Mesa {
  id           Int         @id @default(autoincrement())
  numero       Int         @unique
  ubicacion    String?
  estado       EstadoMesa  @default(PENDIENTE)
  fechaCarga   DateTime?
  usuarioCarga Int?
  
  acta  ActaMesa?
  votos VotoLista[]
  
  @@map("mesas")
}

model ActaMesa {
  id                    Int      @id @default(autoincrement())
  mesaId                Int      @unique
  sobresRecibidos       Int
  electoresVotaron      Int      // Campo A del acta
  votosEnBlanco         Int      @default(0)
  votosImpugnados       Int      @default(0)
  votosSobreNro3        Int      @default(0)
  observaciones         String?
  fechaCarga            DateTime @default(now())
  usuarioId             Int
  
  // Relaciones
  mesa    Mesa    @relation(fields: [mesaId], references: [id])
  usuario Usuario @relation(fields: [usuarioId], references: [id])
  
  @@map("actas_mesa")
}

model VotoLista {
  id       Int @id @default(autoincrement())
  mesaId   Int
  listaId  Int
  cantidad Int @default(0)
  
  mesa  Mesa  @relation(fields: [mesaId], references: [id])
  lista Lista @relation(fields: [listaId], references: [id])
  
  @@unique([mesaId, listaId])
  @@map("votos_lista")
}

model ConfiguracionSistema {
  id    Int    @id @default(autoincrement())
  clave String @unique
  valor String
  
  @@map("configuracion_sistema")
}

enum RolUsuario {
  ADMIN
  OPERADOR
  CONSULTOR
}

enum TipoLista {
  LOCAL
  PROVINCIAL
}

enum EstadoMesa {
  PENDIENTE
  CARGADA
  VALIDADA
}